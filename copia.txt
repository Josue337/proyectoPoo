//clase 7
import java.util.Scanner;

public class Cafeteria{
    private String nombre;
    private String ubicacion;
    private int capacidaMaxima;
    private Cliente cliente;
    private Cliente[] clientes;
    private int contClientes;
    private Producto producto;
    private Producto[] productos;
    private int contProductos;
    private Pedido pedido;
    private Pedido[] pedidos;
    private int contPededidos;

    public Cafeteria(String nombre, String ubicacion, int capacidaMaxima) {
        this.nombre = nombre;
        this.ubicacion = ubicacion;
        this.capacidaMaxima = capacidaMaxima;
        this.cliente = null;
        this.clientes = new Cliente[this.capacidaMaxima];
        this.contClientes = 0;
        this.producto = null;
        this.productos = new Producto[this.capacidaMaxima];
        this.contProductos = 0;
        this.pedido = null;
        this.pedidos = new Pedido[this.capacidaMaxima];
        this.contPededidos = 0;
    }

    public void agregarCliente(Scanner input){
        if(this.contClientes >= capacidaMaxima){
            System.out.println("No hay espacio para clientes");
            return;
        }

        System.out.println("Ingresa el nombre: ");
        String nombre = input.nextLine();
        System.out.println("Ingrese el id: ");
        String id = input.nextLine();
        System.out.println("Ingresa el correo: ");
        String correo = input.nextLine();

        for (int i = 0; i < this.contClientes; i++) {
            if (this.clientes[i].getId().equals(id)) {
                System.out.println("Este cliente ya existe");
                return;
            }
        }

        this.clientes[this.contClientes] = new Cliente(nombre,id,correo);
        this.contClientes++;
        System.out.println("Cliente agregado");
    }

    public void eliminarCliente(Scanner input){
        if(this.contClientes == 0){
            System.out.println("No hay clientes");
            return;
        }

        System.out.println("Ingrese el id a eliminar: ");
        String id = input.nextLine();

        for (int i = 0; i < this.contClientes; i++) {
            if(this.clientes[i].getId().equals(id)){
                for (int j = i; j < this.contClientes-1; j++) {
                    this.clientes[j] = this.clientes[j+1];
                }
                this.clientes[this.contClientes-1] = null;
                this.contClientes--;
                System.out.println("Cliente eliminado");
                return;
            }
        }
        System.out.println("Cliente no encontrado");
    }

    public void listarClientes(){
        if(this.contClientes == 0){
            System.out.println("No hay clientes a mostrar");
            return;
        }

        for (int i = 0; i < this.contClientes; i++) {
            this.clientes[i].mostrarInfo();
        }
    }

    public void agregarComida(Scanner input){
        if(this.contProductos >= capacidaMaxima){
            System.out.println("No hay espacio para productos");
        }

        System.out.println("Ingresa el nombre: ");
        String nombre = input.nextLine();
        System.out.println("Ingrese el precio: ");
        double precio = input.nextDouble();
        input.nextLine();
        System.out.println("Ingresa el codigo: ");
        String codigo = input.nextLine();
        System.out.println("tipo: rapida, pesada, gutmet, etc...: ");
        String tipo = input.nextLine();
        System.out.println("Es vegetariana?: ");
        String esVegetariana = input.nextLine();

        for (int i = 0; i < this.contProductos; i++) {
            if (this.productos[i].getCodigo().equals(codigo)) {
                System.out.println("Este producto ya existe");
                return;
            }
        }

        this.productos[this.contProductos] = new Comida(nombre,precio,codigo,tipo,esVegetariana);
        this.contProductos++;
        System.out.println("Comida agregada");
    }

    public void agregarBebida(Scanner input){
        if(this.contProductos >= capacidaMaxima){
            System.out.println("No hay espacio para productos");
        }

        System.out.println("Ingresa el nombre: ");
        String nombre = input.nextLine();
        System.out.println("Ingrese el precio: ");
        double precio = input.nextDouble();
        input.nextLine();
        System.out.println("Ingresa el codigo: ");
        String codigo = input.nextLine();
        System.out.println("tipo: gaseosa, jugo natural, chicha, etc...: ");
        String tipo = input.nextLine();
        System.out.println("Es alcoholica?: ");
        String esAlcoholica = input.nextLine();

        for (int i = 0; i < this.contProductos; i++) {
            if (this.productos[i].getCodigo().equals(codigo)) {
                System.out.println("Este producto ya existe");
                return;
            }
        }

        this.productos[this.contProductos] = new Bebida(nombre,precio,codigo,tipo,esAlcoholica);
        this.contProductos++;
        System.out.println("Bebida agregada");
    }

    public void eliminarProducto(Scanner input){
        if(this.contProductos == 0){
            System.out.println("No hay productos");
            return;
        }

        System.out.println("Ingrese el codigo a eliminar: ");
        String codigo = input.nextLine();

        for (int i = 0; i < this.contProductos; i++) {
            if(this.productos[i].getCodigo().equals(codigo)){
                for (int j = i; j < this.contProductos-1; j++) {
                    this.productos[j] = this.productos[j+1];
                }
                this.productos[this.contProductos-1] = null;
                this.contProductos--;
                System.out.println("Producto eliminado");
                return;
            }
        }
        System.out.println("Producto no encontrado");
    }

    public void listarProductos(){
        if(this.contProductos == 0){
            System.out.println("No hay productos a mostrar");
            return;
        }

        System.out.println("===== InformaciÃ³n de Productos =====");
        for (int i = 0; i < this.contProductos; i++) {
            this.productos[i].mostrarDetalles();
        }
    }

    public void aplicarDescuentoBebidas(Scanner input){
        if (this.contProductos == 0) {
            System.out.println("No hay productos registrados.");
            return;
        }

        System.out.println("Ingrese el porcertaje del descuento: ");
        Double porcentaje = input.nextDouble();

        boolean hayBebidas = false;
        for(int i = 0; i < contProductos; i++) {
            if(productos[i] instanceof Bebida){
                Bebida bebida = (Bebida) productos[i];
                double precioActual = bebida.getPrecio();
                double descuento = precioActual * (porcentaje / 100.0);
                bebida.setPrecio(precioActual - descuento);
                hayBebidas = true;
            }
        }
        if (hayBebidas) {
            System.out.println("Descuento aplicado a todas las bebidas.");
        } else {
            System.out.println("No hay bebidas registradas.");
        }
    }

    public void crearPedido(Scanner input){
        if(this.contClientes == 0){
            System.out.println("No hay clientes para hacer pedido");
            return;
        }      
        
        if(this.contProductos == 0){
            System.out.println("No hay productos para el pedido");
            return;
        }

        if(this.contPededidos >= capacidaMaxima){
            System.out.println("No hay espacio para pedidos");
            return;
        }

        System.out.println("Ingrese el id del cliente: ");
        String id = input.nextLine();

        for (int i = 0; i < this.contClientes; i++) {
            if (this.clientes[i].getId().equals(id)) {
                this.cliente = this.clientes[i];
                break;
            }else{
                System.out.println("Cliente no encontraado");
            }

        }

        System.out.println("Cuantos prpoductos va a comprar");
        int cantP = input.nextInt();
        int contPro = 0;
        Producto[] productosPedido = new Producto[cantP];
        
        for (int i = 0; i < cantP; i++) {
            System.out.println("Ingrese el codigo producto");
            String codigo = input.nextLine();
            if(this.productos[i].getCodigo().equals(codigo)){
                productosPedido[contPro] = this.productos[i];
                contPro++;
            }
        }

        System.out.println("Fecha a recojer");
        String fecha = input.nextLine();

        this.pedidos[this.contPededidos] = new Pedido(cliente, productosPedido, fecha);
        this.contPededidos++;


        System.out.println("Productos agregados al pedido");
    }

    public void eliminarPedido(Scanner input){
        if(this.contPededidos == 0){
            System.out.println("No hay pedidos a eliminar");
            return;
        }

        System.out.println("Ingrese el id del cliente a eliminar pedido");
        String id = input.nextLine();

        for (int i = 0; i < this.contPededidos; i++) {
            if(this.pedidos[i].getCliente().getId().equals(id)){
                for (int j = i; j < this.contPededidos-1; j++) {
                    this.pedidos[j] = this.pedidos[j+1];
                }
                this.pedidos[this.contPededidos-1] = null;
                this.contPededidos--;
                System.out.println("Pedido eliminado correctamente");
                return;
            }
        }
        System.out.println("pedido no encontrado");
    }





    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getUbicacion() {
        return ubicacion;
    }

    public void setUbicacion(String ubicacion) {
        this.ubicacion = ubicacion;
    }

    public int getCapacidaMaxima() {
        return capacidaMaxima;
    }

    public void setCapacidaMaxima(int capacidaMaxima) {
        this.capacidaMaxima = capacidaMaxima;
    }

    public Cliente getCliente() {
        return cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    public Cliente[] getClientes() {
        return clientes;
    }

    public void setClientes(Cliente[] clientes) {
        this.clientes = clientes;
    }

    public int getContClientes() {
        return contClientes;
    }

    public void setContClientes(int contClientes) {
        this.contClientes = contClientes;
    }

    public Producto getProducto() {
        return producto;
    }

    public void setProducto(Producto producto) {
        this.producto = producto;
    }

    public Producto[] getProductos() {
        return productos;
    }

    public void setProductos(Producto[] productos) {
        this.productos = productos;
    }

    public int getContProductos() {
        return contProductos;
    }

    public void setContProductos(int contProductos) {
        this.contProductos = contProductos;
    }

    public Pedido getPedido() {
        return pedido;
    }

    public void setPedido(Pedido pedido) {
        this.pedido = pedido;
    }

    public Pedido[] getPedidos() {
        return pedidos;
    }

    public void setPedidos(Pedido[] pedidos) {
        this.pedidos = pedidos;
    }

    public int getContPededidos() {
        return contPededidos;
    }

    public void setContPededidos(int contPededidos) {
        this.contPededidos = contPededidos;
    } 
}